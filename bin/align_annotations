#!/usr/bin/env ruby
require 'text_alignment'

require 'json'
require 'pp'

unless ARGV.length == 2
	warn "align_annotations target_annotations(.json) reference_annotations(.json)"
	exit
end

anns1 = JSON.parse File.read(ARGV[0].strip), :symbolize_names => true
anns2 = JSON.parse File.read(ARGV[1].strip), :symbolize_names => true

str1 = anns1[:text]
str2 = anns2[:text]

denotations = anns1[:denotations]

puts "[Alignment1]====="
align = TextAlignment::TextAlignment.new(str1, str2, TextAlignment::MAPPINGS)
puts TextAlignment::sdiff2cdiff(align.sdiff)
puts
puts "[Similarity]\n#{align.similarity}"
puts
puts '[Denotations original]'
pp denotations
puts
puts '[Denotations transformed]'
new_denotations = align.transform_hdenotations(denotations)
pp new_denotations
puts
puts "[Alignment2 (downcased)]====="
align = TextAlignment::TextAlignment.new(str1.downcase, str2.downcase, TextAlignment::MAPPINGS)
puts TextAlignment::sdiff2cdiff(align.sdiff)
puts
puts "[Similarity]\n#{align.similarity}"
puts
puts '[Denotations original]'
pp denotations
puts
puts '[Denotations transformed]'
new_denotations = align.transform_hdenotations(denotations)
pp new_denotations

# p align.common_elements
# puts "---------------"
# p align.mapped_elements
